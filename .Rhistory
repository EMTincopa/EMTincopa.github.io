blogdown:::serve_site()
library("blogdown", lib.loc="~/R/win-library/3.5")
library("bookdown", lib.loc="~/R/win-library/3.5")
library("rmarkdown", lib.loc="~/R/win-library/3.5")
library("shiny", lib.loc="~/R/win-library/3.5")
library("shinyFiles", lib.loc="~/R/win-library/3.5")
setwd("D:/MyNewPersonalBlog/EMTincopa.github.io")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
knitr::opts_chunk$set(collapse = TRUE)
knitr::opts_chunk$set(collapse = TRUE)
summary(cars)
fit <- lm(dist ~ speed, data = cars)
fit
par(mar = c(0, 1, 0, 1))
pie(
c(280, 60, 20),
c('Sky', 'Sunny side of pyramid', 'Shady side of pyramid'),
col = c('#0292D8', '#F7EA39', '#C4B632'),
init.angle = -50, border = NA
)
par(mar = c(0, 1, 0, 1))
pie(
c(280, 60, 20),
c('Sky', 'Sunny side of pyramid', 'Shady side of pyramid'),
col = c('#0292D8', '#F7EA39', '#C4B632'),
init.angle = -50, border = NA
)
library("blogdown", lib.loc="~/R/win-library/3.5")
library("bookdown", lib.loc="~/R/win-library/3.5")
library("shiny", lib.loc="~/R/win-library/3.5")
library("shinyFiles", lib.loc="~/R/win-library/3.5")
blogdown:::serve_site()
```{r setup, include=FALSE}
knitr::opts_chunk$set(collapse = TRUE)
```
{r setup, include=FALSE}
knitr::opts_chunk$set(collapse = TRUE)
blogdown:::serve_site()
library("bookdown", lib.loc="~/R/win-library/3.5")
library("blogdown", lib.loc="~/R/win-library/3.5")
library("shiny", lib.loc="~/R/win-library/3.5")
library("shinyFiles", lib.loc="~/R/win-library/3.5")
icon(band-aid, class = NULL, lib = "font-awesome")
library(shiny)
icon(band-aid, class = NULL, lib = "font-awesome")
icon(ban, class = NULL, lib = "font-awesome")
icon(band, class = NULL, lib = "font-awesome")
submitButton("Update View", icon = icon("refresh"))
blogdown:::serve_site()
blogdown:::serve_site()
knitr::opts_chunk$set(collapse = TRUE)
summary(cars)
fit <- lm(dist ~ speed, data = cars)
fit
knitr::opts_chunk$set(collapse = TRUE)
View(fit)
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
library("blogdown", lib.loc="~/R/win-library/3.5")
library("bookdown", lib.loc="~/R/win-library/3.5")
library("shiny", lib.loc="~/R/win-library/3.5")
library("shinyFiles", lib.loc="~/R/win-library/3.5")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
setwd("D:/MyNewPersonalBlog/EMTincopa.github.io")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
library("shiny", lib.loc="~/R/win-library/3.5")
library("shinyFiles", lib.loc="~/R/win-library/3.5")
library("miniUI", lib.loc="~/R/win-library/3.5")
library("markdown", lib.loc="~/R/win-library/3.5")
library("blogdown", lib.loc="~/R/win-library/3.5")
library("bookdown", lib.loc="~/R/win-library/3.5")
library("rmarkdown", lib.loc="~/R/win-library/3.5")
library("htmlTable", lib.loc="~/R/win-library/3.5")
blogdown:::new_post_addin()
for(i in 1:10){
rect(xPres[i]-xWidth[i],0,xPres[i]+xWidth[i],xHeight[i],col=sample(c("blue","red"),size=1))
rect(xPres[i]-0.2*xWidth[i],0,xPres[i]+0.2*xWidth[i],xHeight[i],col=sample(c("gold","grey87"),size=1))
}
# Make the canvas
plot(1:10,1:10,xlim=c(-5,5),ylim=c(0,10),type="n",xlab="",ylab="",xaxt="n",yaxt="n")
# Make the branches
rect(-1,0,1,2,col="tan3",border="tan4",lwd=3)
polygon(c(-5,0,5),c(2,4,2),col="palegreen3",border="palegreen4",lwd=3)
polygon(c(-4,0,4),c(3.5,5.5,3.5),col="palegreen4",border="palegreen3",lwd=3)
polygon(c(-3,0,3),c(5,6.5,5),col="palegreen3",border="palegreen4",lwd=3)
polygon(c(-2,0,2),c(6.25,7.5,6.25),col="palegreen4",border="palegreen3",lwd=3)
#Add some ornaments
points(x=runif(4,-5,5),y=rep(2,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-4,4),y=rep(3.5,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-3,3),y=rep(5,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-2,2),y=rep(6.25,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(0,7.5,pch=8,cex=5,col="gold",lwd=3)
# Add some presents
xPres = runif(10,-4.5,4.5)
xWidth = runif(10,0.1,0.5)
xHeight=runif(10,0,1)
for(i in 1:10){
rect(xPres[i]-xWidth[i],0,xPres[i]+xWidth[i],xHeight[i],col=sample(c("blue","red"),size=1))
rect(xPres[i]-0.2*xWidth[i],0,xPres[i]+0.2*xWidth[i],xHeight[i],col=sample(c("gold","grey87"),size=1))
}
# create data
x <- c(8,7,6,7,6,5,6,5,4,5,4,3,4,3,2,3,2,1,0.5,0.1)
dat1 <- data.frame(x1 = 1:length(x), x2 = x)
dat2 <- data.frame(x1 = 1:length(x), x2 = -x)
dat1$xvar <- dat2$xvar <- NA
dat1$yvar <- dat2$yvar <- NA
dat1$siz <- dat2$siz <- NA
dat1$col <- dat2$col dec_threshold){
dat1$xvar[row] <- row #sample(1:dat1$x1[row],1)
dat1$yvar[row] <- sample(1:dat1$x2[row]-1,1)
dat1$siz[row] <- runif(1,0.5,1.5)
dat1$col[row] dec_threshold){
dat2$xvar[row] <- row #sample(1:dat2$x1[row],1)
dat2$yvar[row] <- sample(1:dat2$x2[row],1)
dat2$siz[row] <- runif(1,0.5,1.5)
dat2$col[row] <- sample(1:5, 1)
}
}
# plot the christmas tree
ggplot() +
geom_bar(data = dat1, aes(x=x1, y=x2),stat = "identity", fill = '#31a354') +
geom_bar(data = dat2, aes(x=x1, y=x2),stat = "identity", fill = '#31a354') +
geom_point(data = dat1,aes(x = xvar, y = yvar, size = siz, colour = as.factor(col)) ) +
geom_point(data = dat2,aes(x = xvar, y = yvar, size = siz, colour = as.factor(col)) ) +
coord_flip() + theme_minimal()+ theme(legend.position="none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
ggtitle('The Analytics Lab wishes you a Merry Christmas')
library(ggplot2)
# create data
x <- c(8,7,6,7,6,5,6,5,4,5,4,3,4,3,2,3,2,1,0.5,0.1)
dat1 <- data.frame(x1 = 1:length(x), x2 = x)
dat2 <- data.frame(x1 = 1:length(x), x2 = -x)
dat1$xvar <- dat2$xvar <- NA
dat1$yvar <- dat2$yvar <- NA
dat1$siz <- dat2$siz <- NA
dat1$col <- dat2$col dec_threshold){
dat1$xvar[row] <- row #sample(1:dat1$x1[row],1)
dat1$yvar[row] <- sample(1:dat1$x2[row]-1,1)
dat1$siz[row] <- runif(1,0.5,1.5)
dat1$col[row] dec_threshold){
dat2$xvar[row] <- row #sample(1:dat2$x1[row],1)
dat2$yvar[row] <- sample(1:dat2$x2[row],1)
dat2$siz[row] <- runif(1,0.5,1.5)
dat2$col[row] <- sample(1:5, 1)
}
}
# plot the christmas tree
ggplot() +
geom_bar(data = dat1, aes(x=x1, y=x2),stat = "identity", fill = '#31a354') +
geom_bar(data = dat2, aes(x=x1, y=x2),stat = "identity", fill = '#31a354') +
geom_point(data = dat1,aes(x = xvar, y = yvar, size = siz, colour = as.factor(col)) ) +
geom_point(data = dat2,aes(x = xvar, y = yvar, size = siz, colour = as.factor(col)) ) +
coord_flip() + theme_minimal()+ theme(legend.position="none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
ggtitle('The Analytics Lab wishes you a Merry Christmas')
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::insert_image_addin()
blogdown:::new_post_addin()
setwd("D:/MyNewPersonalBlog/EMTincopa.github.io")
install.packages("plotly")
library(plotly)
library(ggplot2)
library(plotly)
library(ggplot2)
library(plotly)
set.seed(100)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = carat, y = price, text = paste("Clarity: ", clarity),
mode = "markers", color = carat, size = carat)
library(ggplot2)
library(plotly)
set.seed(100)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plotly(d, x = carat, y = price, text = paste("Clarity: ", clarity),
mode = "markers", color = carat, size = carat)
library(ggplot2)
library(plotly)
set.seed(100)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = carat, y = price, text = paste("Clarity: ", clarity),
mode = "markers", color = carat, size = carat)
library(ggplot2)
library(plotly)
set.seed(100)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = carat, y = price, text = paste("Clarity: ", clarity),
mode = "markers", color = carat, size = carat)
library(ggplot2)
library(plotly)
set.seed(100)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = carat, y = price, text = paste("Clarity: ", clarity),
mode = "markers", color = carat, size = carat)
Sys.setenv("plotly_username"="EMTincopa")
Sys.setenv("plotly_api_key"="••••••••••")
library(plotly)
dat <- data.frame(xx = c(runif(100,20,50),runif(100,40,80),runif(100,0,30)),yy = rep(letters[1:3],each = 100))
p <- ggplot(dat,aes(x=xx)) +
geom_histogram(data=subset(dat,yy == 'a'),fill = "red", alpha = 0.2) +
geom_histogram(data=subset(dat,yy == 'b'),fill = "blue", alpha = 0.2) +
geom_histogram(data=subset(dat,yy == 'c'),fill = "green", alpha = 0.2)
p <- ggplotly(p)
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
chart_link = plotly_POST(p, filename="geom_histogram/basic")
library(plotly)
dat <- data.frame(xx = c(runif(100,20,50),runif(100,40,80),runif(100,0,30)),yy = rep(letters[1:3],each = 100))
p <- ggplot(dat,aes(x=xx)) +
geom_histogram(data=subset(dat,yy == 'a'),fill = "red", alpha = 0.2) +
geom_histogram(data=subset(dat,yy == 'b'),fill = "blue", alpha = 0.2) +
geom_histogram(data=subset(dat,yy == 'c'),fill = "green", alpha = 0.2)
p <- ggplotly(p)
Sys.setenv("plotly_username"="EMTincopa")
Sys.setenv("plotly_api_key"="••••••••••")
Sys.setenv("plotly_username"="EMTincopa")
Sys.setenv("plotly_api_key"="••••••••••")
set.seed(2018-12-27)
temp <- rnorm(100, mean = 30, sd = 5)
pressue <- rnorm (100)
dtime <- 1:100
plot_ly(x = temp, y=pressue, z=dtime,
type = "scatter3d", mode = "markers", color = temp)
set.seed(2018-12-27)
temp <- rnorm(100, mean = 30, sd = 5)
pressue <- rnorm (100)
dtime <- 1:100
plot_ly(x = temp, y=pressue, z=dtime,
type = "scatter3d", mode = "markers", color = temp)
par(mar = c(0, 1, 0, 1))
pie(
c(280, 60, 20),
c('Sky', 'Sunny side of pyramid', 'Shady side of pyramid'),
col = c('#0292D8', '#F7EA39', '#C4B632'),
init.angle = -50, border = NA
)
set.seed(2018-12-27)
temp <- rnorm(100, mean = 30, sd = 5)
pressue <- rnorm (100)
dtime <- 1:100
plot_ly(x = temp, y=pressue, z=dtime,
type = "scatter3d", mode = "markers", color = temp)
set.seed(2018-12-27)
temp <- rnorm(100, mean = 30, sd = 5)
pressue <- rnorm (100)
dtime <- 1:100
plot_ly(x = temp, y = pressue, z = dtime,
type = "scatter3d", mode = "markers", color = temp)
set.seed(2018-12-27)
temp <- rnorm(100, mean = 30, sd = 5)
pressue <- rnorm (100)
dtime <- 1:100
plot_ly(x = temp, y = pressue, z = dtime,
type = "scatter3d", mode = "markers", color = temp)
set.seed(2018-12-27)
temp <- rnorm(100, mean = 30, sd = 5)
pressue <- rnorm (100)
dtime <- 1:100
plot_ly(x = temp, y = pressue, z = dtime,
type = "scatter3d", mode = "markers", color = temp)
blogdown:::serve_site()
par(mar = c(0, 1, 0, 1))
pie(
c(280, 60, 20),
c('Sky', 'Sunny side of pyramid', 'Shady side of pyramid'),
col = c('#0292D8', '#F7EA39', '#C4B632'),
init.angle = -50, border = NA
)
library(plotly)
data <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/gapminderDataFiveYear.csv")
data_2007 <- data[which(data$year == 2007),]
data_2007 <- data_2007[order(data_2007$continent, data_2007$country),]
slope <- 2.666051223553066e-05
data_2007$size <- sqrt(data_2007$pop * slope)
colors <- c('#4AC6B7', '#1972A4', '#965F8A', '#FF7070', '#C61951')
p <- plot_ly(data_2007, x = ~gdpPercap, y = ~lifeExp, color = ~continent, size = ~size, colors = colors,
type = 'scatter', mode = 'markers', sizes = c(min(data_2007$size), max(data_2007$size)),
marker = list(symbol = 'circle', sizemode = 'diameter',
line = list(width = 2, color = '#FFFFFF')),
text = ~paste('Country:', country, '<br>Life Expectancy:', lifeExp, '<br>GDP:', gdpPercap,
'<br>Pop.:', pop)) %>%
layout(title = 'Life Expectancy v. Per Capita GDP, 2007',
xaxis = list(title = 'GDP per capita (2000 dollars)',
gridcolor = 'rgb(255, 255, 255)',
range = c(2.003297660701705, 5.191505530708712),
type = 'log',
zerolinewidth = 1,
ticklen = 5,
gridwidth = 2),
yaxis = list(title = 'Life Expectancy (years)',
gridcolor = 'rgb(255, 255, 255)',
range = c(36.12621671352166, 91.72921793264332),
zerolinewidth = 1,
ticklen = 5,
gridwith = 2),
paper_bgcolor = 'rgb(243, 243, 243)',
plot_bgcolor = 'rgb(243, 243, 243)')
library(plotly)
data <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/gapminderDataFiveYear.csv")
data_2007 <- data[which(data$year == 2007),]
data_2007 <- data_2007[order(data_2007$continent, data_2007$country),]
slope <- 2.666051223553066e-05
data_2007$size <- sqrt(data_2007$pop * slope)
colors <- c('#4AC6B7', '#1972A4', '#965F8A', '#FF7070', '#C61951')
p <- plot_ly(data_2007, x = ~gdpPercap, y = ~lifeExp, color = ~continent, size = ~size, colors = colors,
type = 'scatter', mode = 'markers', sizes = c(min(data_2007$size), max(data_2007$size)),
marker = list(symbol = 'circle', sizemode = 'diameter',
line = list(width = 2, color = '#FFFFFF')),
text = ~paste('Country:', country, '<br>Life Expectancy:', lifeExp, '<br>GDP:', gdpPercap,
'<br>Pop.:', pop)) %>%
layout(title = 'Life Expectancy v. Per Capita GDP, 2007',
xaxis = list(title = 'GDP per capita (2000 dollars)',
gridcolor = 'rgb(255, 255, 255)',
range = c(2.003297660701705, 5.191505530708712),
type = 'log',
zerolinewidth = 1,
ticklen = 5,
gridwidth = 2),
yaxis = list(title = 'Life Expectancy (years)',
gridcolor = 'rgb(255, 255, 255)',
range = c(36.12621671352166, 91.72921793264332),
zerolinewidth = 1,
ticklen = 5,
gridwith = 2),
paper_bgcolor = 'rgb(243, 243, 243)',
plot_bgcolor = 'rgb(243, 243, 243)')
blogdown:::serve_site()
library(ggplot2)
library(ggthemes)
ggplot(mpg, aes(displ, hwy, colour = class)) +
geom_point()+
theme_minimal()
library(ggplot2)
library(ggthemes)
ggplot(mpg, aes(displ, hwy, colour = class)) +
geom_point()+
theme_minimal()
library(ggplot2)
library(ggthemes)
ggplot(mpg, aes(displ, hwy, colour = class)) +
geom_point()+
theme_minimal()
library(ggplot2)
library(ggthemes)
ggplot(mpg, aes(displ, hwy, colour = class)) +
geom_point()+
theme_minimal()
library(ggplot2)
library(ggthemes)
ggplot(mpg, aes(displ, hwy, colour = class)) +
geom_point()+
theme_minimal()
blogdown:::serve_site()
blogdown:::serve_site()
library(ggplot2)
library(ggthemes)
ggplot(mpg, aes(displ, hwy, colour = class)) +
geom_point()+
theme_minimal()
par(mar = c(0, 1, 0, 1))
pie(
c(280, 60, 20),
c('Cielo', 'Lado soleado de la pirámide', 'Lado sombrío de la pirámide.'),
col = c('#0292D8', '#F7EA39', '#C4B632'),
init.angle = -50, border = NA
)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
library(readr)
library(readxl)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(ggthemes)
library(readr)
library(readxl)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(ggthemes)
presupuesto<- read_excel("year2.xlsx", sheet=3)
colnames(presupuesto) <- make.names(colnames(presupuesto))
View(presuuesto)
presupuesto<- read_excel("year2.xlsx", sheet=3)
colnames(presupuesto) <- make.names(colnames(presupuesto))
View(presuesto)
presupuesto<- read_excel("year2.xlsx", sheet=3)
colnames(presupuesto) <- make.names(colnames(presupuesto))
View(presupuesto)
presupuesto<- read_excel("year2.xlsx", sheet=1)
colnames(presupuesto) <- make.names(colnames(presupuesto))
View(presupuesto)
presupuesto$Date <- as.factor(presupuesto$Date)
ggplot(data = presupuesto, aes(x=Mes, y=format(USD, digits=5), fill=Cost.type)) +
geom_bar(stat = "identity")
ggplot(data = presupuesto, aes(x=Mes, y=format(USD, digits=5), fill=Cost.type)) +
geom_bar(stat = "identity")+
labs(x=" ", y=" ", fill=" ",
title="Presupuesto total en Chep?n (2012-2017)",
subtitle= "Consulta Amigable - MEF")+
theme_minimal()+
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold"))+
scale_fill_brewer()
ggplot(data = presupuesto, aes(x=Mes, y=format(USD, digits=5), fill=Cost.type)) +
geom_bar(stat = "identity")
presupuesto$Mes <- as.factor(presupuesto$Mes)
ggplot(data = presupuesto, aes(x=Mes, y=format(USD, digits=5), fill=Cost.type)) +
geom_bar(stat = "identity")
ggplot(data = presupuesto, aes(x=Mes, y=format(USD, digits=5))) +
geom_bar(stat = "identity")
presupuesto$Date <- as.numeric(presupuesto$Date)
presupuesto$Mes <- as.numeric(presupuesto$Mes)
ggplot(data = presupuesto, aes(x=Mes, y=format(USD, digits=5))) +
geom_bar(stat = "identity")
presupuesto$Mes <- as.Date(presupuesto$Mes)
ggplot(data = presupuesto, aes(x=Mes, y=format(USD, digits=5))) +
geom_bar(stat = "identity")
blogdown:::serve_site()
setwd("D:/MyNewPersonalBlog/EMTincopa.github.io")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
library("blogdown", lib.loc="~/R/win-library/3.5")
library("bookdown", lib.loc="~/R/win-library/3.5")
blogdown:::serve_site()
install.packages("blogdown")
blogdown::install_hugo()
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
blogdown::install_hugo()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
library(ggplot2)
library(ggthemes)
ggplot(mpg, aes(displ, hwy, colour = class)) +
geom_point()+
theme_minimal()
blogdown:::serve_site()
library("bookdown", lib.loc="~/R/win-library/3.5")
library("blogdown", lib.loc="~/R/win-library/3.5")
library("markdown", lib.loc="~/R/win-library/3.5")
library("shiny", lib.loc="~/R/win-library/3.5")
library("shinyFiles", lib.loc="~/R/win-library/3.5")
blogdown:::serve_site()
blogdown:::serve_site()
library("utf8", lib.loc="~/R/win-library/3.5")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
setwd("D:/MyNewPersonalBlog/EMTincopa.github.io")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
